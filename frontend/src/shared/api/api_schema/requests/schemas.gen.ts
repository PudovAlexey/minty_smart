// This file is auto-generated by @hey-api/openapi-ts

export const CreateSuppliedTokenBodySchema = {
    type: 'object',
    required: ['name', 'symbol', 'mint_address', 'market_address', 'token_pair'],
    properties: {
        market_address: {
            type: 'string'
        },
        mint_address: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        symbol: {
            type: 'string'
        },
        token_pair: {
            type: 'string'
        }
    }
} as const;

export const CreateSuppliedTokenResponceSchema = {
    type: 'object',
    required: ['id'],
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        }
    }
} as const;

export const GetSuppliedListParamsSchema = {
    type: 'object',
    properties: {
        page: {
            type: ['integer', 'null'],
            format: 'int32',
            minimum: 0
        },
        page_size: {
            type: ['integer', 'null'],
            format: 'int32',
            minimum: 0
        },
        period: {
            type: ['string', 'null'],
            format: 'date-time'
        },
        search_value: {
            type: ['string', 'null']
        },
        sort_by: {
            oneOf: [
                {
                    type: 'null'
                },
                {
                    '$ref': '#/components/schemas/SortByVariants'
                }
            ]
        }
    }
} as const;

export const GetSupplietListResponseSchema = {
    type: 'object',
    required: ['id', 'image_url', 'symbol', 'name', 'current_price', 'price_spread', 'history'],
    properties: {
        current_price: {
            type: 'number',
            format: 'float'
        },
        history: {
            type: 'array',
            items: {
                type: 'number',
                format: 'float'
            }
        },
        id: {
            type: 'string',
            format: 'uuid'
        },
        image_url: {
            type: 'string'
        },
        name: {
            type: 'string'
        },
        price_spread: {
            type: 'number',
            format: 'float'
        },
        symbol: {
            type: 'string'
        }
    }
} as const;

export const MarketPairToPriceUpdateSchema = {
    type: 'object',
    required: ['id', 'marketpair_id', 'new_price'],
    properties: {
        id: {
            type: 'string',
            format: 'uuid'
        },
        marketpair_id: {
            type: 'string',
            format: 'uuid'
        },
        new_price: {
            type: 'number',
            format: 'double'
        }
    }
} as const;

export const SortByVariantsSchema = {
    type: 'string',
    enum: ['Trending', 'Top', 'Favorites']
} as const;

export const TestResponseSchema = {
    type: 'object',
    required: ['id', 'name'],
    properties: {
        id: {
            type: 'string'
        },
        name: {
            type: 'string'
        }
    }
} as const;